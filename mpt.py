#!/usr/bin/python
# -*- coding: utf-8 -*-
from bs4 import BeautifulSoup
import os
import requests 
import sys
import time

class bcolors:
    HEADER = '\033[95m'
    OKBLUE = '\033[94m'
    OKGREEN = '\033[92m'
    WARNING = '\033[93m'
    FAIL = '\033[91m'
    ENDC = '\033[0m'
    BOLD = '\033[1m'
    UNDERLINE = '\033[4m'

def opciones():
	os.system('cls' if os.name == 'nt' else 'clear')
	print bcolors.FAIL + (""" 
___  ____       _                    _           _     _              _ 
|  \/  (_)     (_)                  | |         | |   | |            | |
| .  . |_ _ __  _   _ __   ___ _ __ | |_ ___ ___| |_  | |_ ___   ___ | |
| |\/| | | '_ \| | | '_ \ / _ | '_ \| __/ _ / __| __| | __/ _ \ / _ \| |
| |  | | | | | | | | |_) |  __| | | | ||  __\__ | |_  | || (_) | (_) | |
\_|  |_|_|_| |_|_| | .__/ \___|_| |_|\__\___|___/\__|  \__\___/ \___/|_|
                   | |  By Killuasec usando la api de HackerTarget                                              
                   |_|                
 
 ---------------------------------------------------------------------------""")+ bcolors.ENDC+ bcolors.FAIL  +("""
 Opciones:

 mtr <dominio/ip>
 nping <dominio/ip>
 dnslookup <dominio/ip>
 reversedns <dominio/ip>
 hostsearch <dominio/ip>
 findshareddns <dominio/ip>
 zonetransfer <dominio/ip>
 whois <dominio/ip>
 geoip <dominio/ip>
 reverseiplookup <dominio/ip>
 nmap <dominio/ip>
 subnetcalc <dominio/ip>
 httpheaders <dominio/ip>
 pagelinks <dominio/ip>
 httpheaders <dominio/ip>
 """)+ bcolors.OKGREEN +("""---------------------------------------------------------------------------
 Ejemplos:

 mpt.py mtr google.com.ar
 mpt.py mtr 172.217.28.163

 nmap 172.217.28.163
 nmap google.com.ar

 reverseiplookup 172.217.28.163
 reverseiplookup google.com.ar
 ---------------------------------------------------------------------------
 Info By Hackertarget:

 Traceroute	Using mtr an advanced traceroute tool trace the path of an Internet connection.
 Test Ping	A common tool for testing connectivity to a host, perform a ping from our server.
 DNS Lookup	Find DNS records for a domain, results are determined using the dig DNS tool.
 Find (A) Records	Find forward DNS (A) records for a domain.
 Reverse DNS	Find Reverse DNS records for an IP address or a range of IP addresses.
 Whois Lookup	Determine the registered owner of a domain or IP address block with the whois tool.
 GeoIP Lookup	Find the location of an IP address using the GeoIP lookup location tool.
 Reverse IP	Discover web hosts sharing an IP address with a reverse IP lookup.
 HTTP Headers	View HTTP Headers of a web site. The HTTP Headers reveal system and web application details.
 Page Links	Dump all the links from a web page.""") + bcolors.ENDC

def ayuda():
	os.system('cls' if os.name == 'nt' else 'clear')
	print bcolors.FAIL + (""" 
___  ____       _                    _           _     _              _ 
|  \/  (_)     (_)                  | |         | |   | |            | |
| .  . |_ _ __  _   _ __   ___ _ __ | |_ ___ ___| |_  | |_ ___   ___ | |
| |\/| | | '_ \| | | '_ \ / _ | '_ \| __/ _ / __| __| | __/ _ \ / _ \| |
| |  | | | | | | | | |_) |  __| | | | ||  __\__ | |_  | || (_) | (_) | |
\_|  |_|_|_| |_|_| | .__/ \___|_| |_|\__\___|___/\__|  \__\___/ \___/|_|
                   | |  By Killuasec usando la api de HackerTarget                                                
                   |_|                
 """)+ bcolors.ENDC + bcolors.OKGREEN + ("""
 ---------------------------------------------------------------------------
 Para ver la ayuda: mpt.py -h 
 ---------------------------------------------------------------------------""") + bcolors.ENDC

def comprobacion():
	r = requests.get("https://hackertarget.com/")
	if r.status_code == 200:
		print bcolors.OKGREEN + ("[*] Pagina funcionando, abriendo programa") + bcolors.ENDC
		time.sleep(5)
	elif r.status_code == 404 or 502 or 503:
		print bcolors.FAIL + ("[!] Pagina caida o en mantenimiento, cerrando programa") + bcolors.ENDC
def salir():
	while True:
			
		lul = raw_input("Desea volver al menu Si / No: ")
		
		if lul == "Si":
			ayuda()
			break
		elif lul == "No":
			print("")
			print("Gracias por usar MiniPentestTool :)")
			break
		



if __name__ == '__main__':
		
	if len(sys.argv) == 1:
		comprobacion()
		ayuda()

	elif sys.argv[1] == "-h":
		opciones()

	elif sys.argv[1] == "whois" and sys.argv[2] == int or str:

		capturar = requests.get("https://api.hackertarget.com/"+sys.argv[1]+"/?q="+sys.argv[2])
		data = capturar.text
		soup = BeautifulSoup(data, 'lxml')		 
		funcion = soup.find_all('body')
		print("")
		print("Buscando...")
		print("")
		print bcolors.FAIL +("Datos obtenidos:") + bcolors.ENDC
		print bcolors.OKGREEN + ("")
		print(funcion[0].text) + bcolors.ENDC
		salir()

			

			
